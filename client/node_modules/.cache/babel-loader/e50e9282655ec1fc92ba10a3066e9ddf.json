{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aakash/Desktop/react/react-route/client/src/components/books/BooksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport BookRow from './BookRow';\nimport BookSearch from './BookSearch';\nexport default function BooksPage() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [colleges, setColleges] = useState([]);\n  const [course, setClass] = useState(\"\");\n  const [college, setCollege] = useState(\"\");\n  const testCollege = useRef();\n\n  const getBooks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/getbooks');\n      const data = await response.json();\n      setBooks(data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getColleges = async () => {\n    console.log(\"TEST\");\n\n    try {\n      const data = await fetch('http://localhost:5000/colleges');\n      const json_college = await data.json();\n      setColleges(json_college);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getSomeBooks = async (college, course) => {\n    try {\n      const response = await fetch(`http://localhost:5000/getbooks/${college}/${course}`);\n      const data = await response.json();\n      setBooks(data); // window.location = \"/\";\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getBooks();\n    getColleges();\n  }, []);\n  const test = ['a', 'b'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group mx-sm-3 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"form-control mb-3\",\n            type: \"text\",\n            list: \"data\",\n            placeholder: \"Select your college! e.g. Texas A&M University\",\n            onChange: e => setCollege(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"data\",\n            children: colleges.map(school => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: school.college\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            placeholder: \"Enter your course! e.g. CSCE 121\",\n            onChange: e => setClass(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-primary mb-2\",\n          onClick: e => getSomeBooks(college, course),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-primary mb-2 ml-4\",\n          onClick: e => getBooks(),\n          children: \"Show All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"mt-5 mb-5 result-number\",\n        children: [books.length, \" results\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BookRow, {\n        books: books\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BooksPage, \"tcvTWksljXDbNqzjZrqti5ACq78=\");\n\n_c = BooksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksPage\");","map":{"version":3,"sources":["/Users/aakash/Desktop/react/react-route/client/src/components/books/BooksPage.js"],"names":["React","useState","useEffect","useRef","BookRow","BookSearch","BooksPage","books","setBooks","colleges","setColleges","course","setClass","college","setCollege","testCollege","getBooks","response","fetch","data","json","error","console","message","getColleges","log","json_college","getSomeBooks","test","e","target","value","map","school","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport BookRow from './BookRow'\nimport BookSearch from './BookSearch'\n\nexport default function BooksPage() {\n    \n    const [books, setBooks] = useState([]);\n    const [colleges, setColleges] = useState([]);\n    const [course, setClass] = useState(\"\");\n    const [college, setCollege] = useState(\"\");\n    const testCollege = useRef()\n\n    const getBooks = async () => {\n        try {\n            const response = await fetch('http://localhost:5000/getbooks')\n            const data = await response.json();\n            setBooks(data);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const getColleges = async () => {\n        console.log(\"TEST\")\n        try {\n            const data = await fetch('http://localhost:5000/colleges')\n            const json_college = await data.json();\n            setColleges(json_college);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    const getSomeBooks = async (college, course) => {\n        try {\n            const response = await fetch(`http://localhost:5000/getbooks/${college}/${course}`)\n            const data = await response.json();\n            setBooks(data);\n            // window.location = \"/\";\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    useEffect(() => {\n        getBooks();\n        getColleges();\n    }, [])\n\n    const test = ['a', 'b'];\n\n    return (\n        <div>\n            <div class=\"container mt-5\">\n                <div>\n                    <div class=\"form-group mx-sm-3 mb-2\">\n                    <input class = 'form-control mb-3' type='text' list='data' placeholder='Select your college! e.g. Texas A&M University' onChange={e =>\n                    setCollege(e.target.value)}/>\n                        <datalist id=\"data\">\n                        {colleges.map(school => (                            \n                            <option value = {school.college}/>\n                        ))}\n                        </datalist>\n\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter your course! e.g. CSCE 121\" onChange={e =>\n                    setClass(e.target.value)}></input>\n                    </div>\n                    <button type=\"button\" class=\"btn btn-primary mb-2\" onClick={e => getSomeBooks(college, course)}>Search</button>\n                    <button type=\"button\" class=\"btn btn-primary mb-2 ml-4\" onClick={e => getBooks()}>Show All</button>\n                </div>\n                <h4 class='mt-5 mb-5 result-number'>{books.length} results</h4>\n                <BookRow books = {books}/>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}